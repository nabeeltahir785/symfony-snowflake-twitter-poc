replicaCount: 3

image:
  repository: your-registry/snowflake-poc
  pullPolicy: IfNotPresent
  tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations: {}
  name: ""

podAnnotations: {}
podSecurityContext: {}

securityContext:
  capabilities:
    drop:
      - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: true
  className: "nginx"
  annotations:
    kubernetes.io/ingress.class: nginx
    kubernetes.io/tls-acme: "true"
  hosts:
    - host: snowflake-poc.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []

resources:
  limits:
    cpu: 500m
    memory: 512Mi
  requests:
    cpu: 100m
    memory: 256Mi

autoscaling:
  enabled: true
  minReplicas: 3
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

nodeSelector: {}
tolerations: []
affinity: {}

# App configuration
app:
  env: prod
  debug: false
  secret: "your-app-secret"
  # Distribute node IDs across pods
  # Each pod will get a unique nodeId based on its ordinal index
  # Node IDs will be in range 100-102 for 3 replicas
  snowflakeBaseNodeId: 100

# Database configuration
postgresql:
  enabled: true
  auth:
    username: symfony
    password: symfony
    database: snowflake_db
  primary:
    persistence:
      size: 8Gi
  metrics:
    enabled: true

# RabbitMQ configuration
rabbitmq:
  enabled: true
  auth:
    username: guest
    password: guest
    erlangCookie: "snowflake-poc-erlang-cookie"
  clustering:
    enabled: true
    replicaCount: 3
  persistence:
    enabled: true
    size: 8Gi
  metrics:
    enabled: true