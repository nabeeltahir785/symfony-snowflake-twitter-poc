apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "snowflake-poc.fullname" . }}
  labels:
    {{- include "snowflake-poc.labels" . | nindent 4 }}
spec:
  serviceName: {{ include "snowflake-poc.fullname" . }}
  replicas: {{ .Values.replicaCount }}
  podManagementPolicy: OrderedReady
  selector:
    matchLabels:
      {{- include "snowflake-poc.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "snowflake-poc.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "snowflake-poc.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: init-db
          image: busybox:1.28
          command: ['sh', '-c', 'until nc -z {{ .Release.Name }}-postgresql 5432; do echo waiting for postgresql; sleep 2; done;']
        - name: init-rabbitmq
          image: busybox:1.28
          command: ['sh', '-c', 'until nc -z {{ .Release.Name }}-rabbitmq 5672; do echo waiting for rabbitmq; sleep 2; done;']
        - name: init-migrations
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          command: ['sh', '-c', 'bin/console doctrine:migrations:migrate --no-interaction']
          env:
            - name: APP_ENV
              value: {{ .Values.app.env }}
            - name: APP_DEBUG
              value: "{{ .Values.app.debug }}"
            - name: APP_SECRET
              value: {{ .Values.app.secret }}
            - name: DATABASE_URL
              value: "postgresql://{{ .Values.postgresql.auth.username }}:{{ .Values.postgresql.auth.password }}@{{ .Release.Name }}-postgresql:5432/{{ .Values.postgresql.auth.database }}?serverVersion=14&charset=utf8"
            - name: MESSENGER_TRANSPORT_DSN
              value: "amqp://{{ .Values.rabbitmq.auth.username }}:{{ .Values.rabbitmq.auth.password }}@{{ .Release.Name }}-rabbitmq:5672/%2f/messages"
      containers:
        - name: nginx
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: nginx:1.21-alpine
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
          volumeMounts:
            - name: nginx-config
              mountPath: /etc/nginx/conf.d/default.conf
              subPath: default.conf
            - name: app-public
              mountPath: /var/www/html/public
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
        - name: php
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          env:
            - name: APP_ENV
              value: {{ .Values.app.env }}
            - name: APP_DEBUG
              value: "{{ .Values.app.debug }}"
            - name: APP_SECRET
              value: {{ .Values.app.secret }}
            - name: DATABASE_URL
              value: "postgresql://{{ .Values.postgresql.auth.username }}:{{ .Values.postgresql.auth.password }}@{{ .Release.Name }}-postgresql:5432/{{ .Values.postgresql.auth.database }}?serverVersion=14&charset=utf8"
            - name: MESSENGER_TRANSPORT_DSN
              value: "amqp://{{ .Values.rabbitmq.auth.username }}:{{ .Values.rabbitmq.auth.password }}@{{ .Release.Name }}-rabbitmq:5672/%2f/messages"
            - name: SNOWFLAKE_NODE_ID
              # Calculate unique node ID for each pod using the base node ID + pod ordinal index
              # This ensures each pod has a unique Snowflake node ID in the range
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          command:
            - /bin/sh
            - -c
            - |
              # Extract pod ordinal index from pod name and add to base node ID
              POD_NAME=$(echo $HOSTNAME)
              ORDINAL_INDEX=$(echo $POD_NAME | awk -F '-' '{print $NF}')
              export SNOWFLAKE_NODE_ID=$(( {{ .Values.app.snowflakeBaseNodeId }} + $ORDINAL_INDEX ))
              echo "Using Snowflake Node ID: $SNOWFLAKE_NODE_ID"
              php-fpm
          ports:
            - name: fpm
              containerPort: 9000
              protocol: TCP
          livenessProbe:
            exec:
              command:
                - php
                - -r
                - "if (!is_file('/var/www/html/public/index.php')) { exit(1); }"
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            exec:
              command:
                - php
                - -r
                - "if (!is_file('/var/www/html/public/index.php')) { exit(1); }"
            initialDelaySeconds: 30
            periodSeconds: 10
          volumeMounts:
            - name: app-public
              mountPath: /var/www/html/public
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
        - name: messenger-worker
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          env:
            - name: APP_ENV
              value: {{ .Values.app.env }}
            - name: APP_DEBUG
              value: "{{ .Values.app.debug }}"
            - name: APP_SECRET
              value: {{ .Values.app.secret }}
            - name: DATABASE_URL
              value: "postgresql://{{ .Values.postgresql.auth.username }}:{{ .Values.postgresql.auth.password }}@{{ .Release.Name }}-postgresql:5432/{{ .Values.postgresql.auth.database }}?serverVersion=14&charset=utf8"
            - name: MESSENGER_TRANSPORT_DSN
              value: "amqp://{{ .Values.rabbitmq.auth.username }}:{{ .Values.rabbitmq.auth.password }}@{{ .Release.Name }}-rabbitmq:5672/%2f/messages"
            - name: SNOWFLAKE_NODE_ID
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          command:
            - /bin/sh
            - -c
            - |
              # Extract pod ordinal index from pod name and add to base node ID
              POD_NAME=$(echo $HOSTNAME)
              ORDINAL_INDEX=$(echo $POD_NAME | awk -F '-' '{print $NF}')
              export SNOWFLAKE_NODE_ID=$(( {{ .Values.app.snowflakeBaseNodeId }} + $ORDINAL_INDEX + 50 ))
              echo "Using Snowflake Node ID for worker: $SNOWFLAKE_NODE_ID"
              bin/console messenger:consume async --time-limit=3600 --memory-limit=256M
          livenessProbe:
            exec:
              command:
                - pgrep
                - -f
                - "bin/console messenger:consume"
            initialDelaySeconds: 30
            periodSeconds: 10
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: nginx-config
          configMap:
            name: {{ include "snowflake-poc.fullname" . }}-nginx-config
        - name: app-public
        emptyDir: {}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}